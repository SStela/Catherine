// <auto-generated />
using System;
using Catherine.Model.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Catherine.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190810162813_Initialize")]
    partial class Initialize
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Catherine.Model.Cities.City", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CountryId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<bool>("IsCapital");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdatedAt");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CountryId = 1L,
                            CreatedAt = new DateTime(2019, 8, 10, 16, 28, 13, 150, DateTimeKind.Utc).AddTicks(3728),
                            IsCapital = false,
                            Name = "Zagreb"
                        },
                        new
                        {
                            Id = 2L,
                            CountryId = 1L,
                            CreatedAt = new DateTime(2019, 8, 10, 16, 28, 13, 150, DateTimeKind.Utc).AddTicks(4241),
                            IsCapital = false,
                            Name = "Karlovac"
                        },
                        new
                        {
                            Id = 3L,
                            CountryId = 3L,
                            CreatedAt = new DateTime(2019, 8, 10, 16, 28, 13, 150, DateTimeKind.Utc).AddTicks(4249),
                            IsCapital = false,
                            Name = "Berlin"
                        });
                });

            modelBuilder.Entity("Catherine.Model.Citizens.Citizen", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Birthdate");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<decimal>("Paycheck")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime?>("UpdatedAt");

                    b.Property<string>("VatNumber")
                        .IsRequired()
                        .HasMaxLength(11);

                    b.HasKey("Id");

                    b.HasIndex("VatNumber")
                        .IsUnique();

                    b.ToTable("Citizens");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Birthdate = new DateTime(1879, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2019, 8, 10, 16, 28, 13, 147, DateTimeKind.Utc).AddTicks(7251),
                            FirstName = "Albert",
                            LastName = "Einstein",
                            Paycheck = 15000.00m,
                            VatNumber = "11111111111"
                        },
                        new
                        {
                            Id = 2L,
                            Birthdate = new DateTime(1858, 4, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2019, 8, 10, 16, 28, 13, 148, DateTimeKind.Utc).AddTicks(2532),
                            FirstName = "Max",
                            LastName = "Planck",
                            Paycheck = 14000.00m,
                            VatNumber = "11111111112"
                        },
                        new
                        {
                            Id = 3L,
                            Birthdate = new DateTime(1995, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2019, 8, 10, 16, 28, 13, 148, DateTimeKind.Utc).AddTicks(2574),
                            FirstName = "Pero",
                            LastName = "Peric",
                            Paycheck = 16000.00m,
                            VatNumber = "11111111113"
                        });
                });

            modelBuilder.Entity("Catherine.Model.Citizenships.Citizenship", b =>
                {
                    b.Property<long>("CitizenId");

                    b.Property<long>("CountryId");

                    b.Property<DateTime>("ValidFrom");

                    b.Property<DateTime?>("ValidTo");

                    b.HasKey("CitizenId", "CountryId");

                    b.HasIndex("CountryId");

                    b.ToTable("Citizenships");

                    b.HasData(
                        new
                        {
                            CitizenId = 1L,
                            CountryId = 3L,
                            ValidFrom = new DateTime(2019, 8, 10, 16, 28, 13, 150, DateTimeKind.Utc).AddTicks(301)
                        },
                        new
                        {
                            CitizenId = 2L,
                            CountryId = 3L,
                            ValidFrom = new DateTime(2019, 8, 10, 16, 28, 13, 150, DateTimeKind.Utc).AddTicks(807)
                        },
                        new
                        {
                            CitizenId = 3L,
                            CountryId = 1L,
                            ValidFrom = new DateTime(2019, 8, 10, 16, 28, 13, 150, DateTimeKind.Utc).AddTicks(816)
                        });
                });

            modelBuilder.Entity("Catherine.Model.Countries.Country", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("President")
                        .HasMaxLength(100);

                    b.Property<string>("PrimeMinister")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdatedAt");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2019, 8, 10, 16, 28, 13, 149, DateTimeKind.Utc).AddTicks(7649),
                            Name = "Croatia"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2019, 8, 10, 16, 28, 13, 149, DateTimeKind.Utc).AddTicks(7969),
                            Name = "USA"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2019, 8, 10, 16, 28, 13, 149, DateTimeKind.Utc).AddTicks(7974),
                            Name = "Germany"
                        });
                });

            modelBuilder.Entity("Catherine.Model.Cities.City", b =>
                {
                    b.HasOne("Catherine.Model.Countries.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Catherine.Model.Citizenships.Citizenship", b =>
                {
                    b.HasOne("Catherine.Model.Citizens.Citizen", "Citizen")
                        .WithMany("Citizenships")
                        .HasForeignKey("CitizenId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Catherine.Model.Countries.Country", "Country")
                        .WithMany("Citizenships")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
